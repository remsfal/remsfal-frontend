{
  "openapi" : "3.1.0",
  "components" : {
    "schemas" : {
      "AddressJson" : {
        "description" : "The address of a customer, a building or a site",
        "type" : "object",
        "properties" : {
          "street" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "province" : {
            "type" : "string"
          },
          "zip" : {
            "type" : "string",
            "pattern" : "^\\d{4,5}$"
          },
          "countryCode" : {
            "type" : "string"
          }
        }
      },
      "ApartmentJson" : {
        "description" : "An apartment inside a building according to WoFIV",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "livingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "usableSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "heatingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          }
        }
      },
      "BillingCycle" : {
        "type" : "string",
        "enum" : [ "WEEKLY", "MONTHLY" ]
      },
      "BuildingJson" : {
        "description" : "A building as part of a property",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "grossFloorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "netFloorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "constructionFloorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "livingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "usableSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "heatingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressJson"
          }
        }
      },
      "ChatMessageJson" : {
        "description" : "A single chat message",
        "type" : "object",
        "properties" : {
          "messageId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "sessionId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "senderId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "contentType" : {
            "type" : "string"
          },
          "content" : {
            "type" : "string"
          },
          "url" : {
            "type" : "string"
          },
          "createdAt" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "modifiedAt" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }
      },
      "ChatMessageListJson" : {
        "description" : "A list of chat messages",
        "type" : "object",
        "properties" : {
          "messages" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatMessageJson"
            }
          }
        }
      },
      "ChatSessionJson" : {
        "description" : "A chat session",
        "type" : "object",
        "properties" : {
          "sessionId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "issueId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "createdAt" : {
            "$ref" : "#/components/schemas/Instant"
          },
          "modifiedAt" : {
            "$ref" : "#/components/schemas/Instant"
          }
        }
      },
      "ChatSessionListJson" : {
        "description" : "A list of chat sessions",
        "type" : "object",
        "required" : [ "size" ],
        "properties" : {
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of chat sessions in the list"
          },
          "chatSessions" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ChatSessionJson"
            }
          }
        }
      },
      "CommercialJson" : {
        "description" : "An commercial inside a building",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "netFloorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "usableFloorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "technicalServicesArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "trafficArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "heatingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          }
        }
      },
      "ContractorJson" : {
        "description" : "A contractor",
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "companyName" : {
            "type" : "string",
            "maxLength" : 255
          },
          "phone" : {
            "type" : "string",
            "pattern" : "^\\+?[0-9]{10,14}$",
            "maxLength" : 15
          },
          "email" : {
            "type" : "string",
            "maxLength" : 255
          },
          "trade" : {
            "type" : "string",
            "maxLength" : 255
          }
        }
      },
      "CountryItemJson" : {
        "description" : "A country item of a list",
        "type" : "object",
        "required" : [ "countryCode", "name" ],
        "properties" : {
          "countryCode" : {
            "type" : "string",
            "minLength" : 1
          },
          "name" : {
            "type" : "string",
            "minLength" : 1
          }
        }
      },
      "CountryListJson" : {
        "description" : "A list of countries",
        "type" : "object",
        "properties" : {
          "countries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/CountryItemJson"
            }
          }
        }
      },
      "Instant" : {
        "type" : "string",
        "format" : "date-time",
        "examples" : [ "2022-03-10T16:15:50Z" ]
      },
      "IssueItemJson" : {
        "description" : "An issue item with basic information",
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "name" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "owner" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "IssueJson" : {
        "description" : "An issue",
        "type" : "object",
        "properties" : {
          "reporterId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "tenancyId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "projectId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          },
          "type" : {
            "$ref" : "#/components/schemas/Type"
          },
          "status" : {
            "$ref" : "#/components/schemas/Status"
          },
          "ownerId" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "description" : {
            "type" : "string"
          },
          "blockedBy" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "relatedTo" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "duplicateOf" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }
      },
      "IssueListJson" : {
        "description" : "A list of issues",
        "type" : "object",
        "required" : [ "first", "size", "total" ],
        "properties" : {
          "first" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Index of the first element in list of total available entries, starting at 1",
            "examples" : [ 1 ]
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "description" : "Number of elements in list",
            "default" : 10
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Total number of available elements"
          },
          "issues" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/IssueItemJson"
            }
          }
        }
      },
      "LocalDate" : {
        "type" : "string",
        "format" : "date",
        "examples" : [ "2022-03-10" ]
      },
      "LocalDateTime" : {
        "type" : "string",
        "format" : "date-time",
        "examples" : [ "2022-03-10T12:15:50" ]
      },
      "MemberRole" : {
        "type" : "string",
        "enum" : [ "PROPRIETOR", "MANAGER", "LESSOR", "STAFF", "COLLABORATOR" ]
      },
      "ProjectItemJson" : {
        "description" : "A project item with the user's member role only",
        "type" : "object",
        "required" : [ "id", "name", "memberRole" ],
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "name" : {
            "type" : "string"
          },
          "memberRole" : {
            "$ref" : "#/components/schemas/MemberRole"
          }
        }
      },
      "ProjectJson" : {
        "description" : "A project",
        "type" : "object",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "pattern" : "\\S",
            "minLength" : 1,
            "maxLength" : 99
          },
          "members" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/components/schemas/ProjectMemberJson"
            }
          }
        },
        "required" : [ "title" ]
      },
      "ProjectListJson" : {
        "description" : "A list of projects",
        "type" : "object",
        "required" : [ "first", "size", "total" ],
        "properties" : {
          "first" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Index of the first element in projects list of total available entries, starting at 1",
            "examples" : [ 1 ]
          },
          "size" : {
            "type" : "integer",
            "format" : "int32",
            "maximum" : 100,
            "minimum" : 1,
            "description" : "Number of elements in projects list",
            "default" : 10
          },
          "total" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "Total number of available projects"
          },
          "projects" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProjectItemJson"
            }
          }
        }
      },
      "ProjectMemberJson" : {
        "type" : "object",
        "description" : "Project member information in context of a project",
        "properties" : {
          "privileged" : {
            "type" : "boolean"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "active" : {
            "type" : "boolean"
          },
          "role" : {
            "$ref" : "#/components/schemas/MemberRole"
          }
        },
        "required" : [ "role" ]
      },
      "ProjectMemberListJson" : {
        "description" : "A list of project members",
        "type" : "object",
        "required" : [ "members" ],
        "properties" : {
          "members" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ProjectMemberJson"
            }
          }
        }
      },
      "PropertyJson" : {
        "description" : "A property",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "landRegistry" : {
            "type" : "string"
          },
          "cadastralDistrict" : {
            "type" : "string"
          },
          "sheetNumber" : {
            "type" : "string"
          },
          "plotNumber" : {
            "type" : "integer",
            "format" : "int32",
            "exclusiveMinimum" : 0
          },
          "cadastralSection" : {
            "type" : "string"
          },
          "plot" : {
            "type" : "string"
          },
          "economyType" : {
            "type" : "string"
          },
          "location" : {
            "type" : "string"
          },
          "plotArea" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          }
        }
      },
      "PropertyListJson" : {
        "description" : "A list of properties",
        "type" : "object",
        "properties" : {
          "properties" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RentalUnitTreeNodeJson"
            }
          }
        }
      },
      "RentJson" : {
        "description" : "A rent of a tenancy",
        "type" : "object",
        "required" : [ "billingCycle", "firstPaymentDate" ],
        "properties" : {
          "billingCycle" : {
            "$ref" : "#/components/schemas/BillingCycle"
          },
          "firstPaymentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastPaymentDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "basicRent" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "operatingCostsPrepayment" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "heatingCostsPrepayment" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          }
        }
      },
      "RentalUnitNodeDataJson" : {
        "type" : "object",
        "description" : "Encapsulated data of a project tree node",
        "properties" : {
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "type" : {
            "description" : "Type of the node (e.g., 'PROPERTY', 'BUILDING')",
            "type" : "string",
            "examples" : [ "PROPERTY" ],
            "$ref" : "#/components/schemas/UnitType"
          },
          "title" : {
            "type" : "string",
            "description" : "Title of the node",
            "examples" : [ "Main Building" ]
          },
          "location" : {
            "type" : "string",
            "description" : "Location of the rental unit",
            "examples" : [ "first floor left" ]
          },
          "description" : {
            "type" : "string",
            "description" : "Description of the rental unit",
            "examples" : [ "A multi-story office building" ]
          },
          "tenant" : {
            "type" : "string",
            "description" : "Name of the tenant associated with this node",
            "examples" : [ "Doe, John" ]
          },
          "space" : {
            "type" : "number",
            "format" : "float",
            "description" : "Usable space in square meters",
            "examples" : [ 350.5 ]
          }
        },
        "required" : [ "type" ]
      },
      "RentalUnitTreeNodeJson" : {
        "type" : "object",
        "description" : "A tree node representing a project entity",
        "required" : [ "key" ],
        "properties" : {
          "key" : {
            "description" : "Key of the node",
            "type" : "string",
            "examples" : [ "Property 1" ],
            "$ref" : "#/components/schemas/UUID"
          },
          "data" : {
            "description" : "Data encapsulating node attributes",
            "type" : "object",
            "$ref" : "#/components/schemas/RentalUnitNodeDataJson"
          },
          "children" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/RentalUnitTreeNodeJson"
            },
            "description" : "Children nodes"
          }
        }
      },
      "SiteJson" : {
        "description" : "A site as part of a property",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "outdoorArea" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressJson"
          }
        }
      },
      "Status" : {
        "type" : "string",
        "enum" : [ "PENDING", "OPEN", "IN_PROGRESS", "CLOSED", "REJECTED" ]
      },
      "StorageJson" : {
        "description" : "A storage inside a building but with living space according to WoFIV",
        "type" : "object",
        "properties" : {
          "type" : {
            "$ref" : "#/components/schemas/UnitType"
          },
          "usableSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "heatingSpace" : {
            "type" : "number",
            "format" : "float",
            "minimum" : 0
          },
          "space" : {
            "type" : "number",
            "format" : "float"
          },
          "location" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "title" : {
            "type" : "string",
            "maxLength" : 255
          }
        }
      },
      "TenancyItemJson" : {
        "description" : "A tenancy item with basic information from a tenant's perspective",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "rentalType" : {
            "description" : "Type of the node (e.g., 'PROPERTY', 'BUILDING')",
            "type" : "string",
            "examples" : [ "PROPERTY" ],
            "$ref" : "#/components/schemas/UnitType"
          },
          "rentalTitle" : {
            "type" : "string",
            "description" : "Title of the node",
            "examples" : [ "Main Building" ]
          },
          "active" : {
            "type" : "boolean"
          }
        },
        "required" : [ "rentalType" ]
      },
      "TenancyJson" : {
        "description" : "A tenancy of a rentable unit",
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "tenants" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/UserJson"
            }
          },
          "startOfRental" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endOfRental" : {
            "$ref" : "#/components/schemas/LocalDate"
          }
        }
      },
      "TenancyJson1" : {
        "description" : "A read-only tenancy of a rentable unit from a tenant's perspective",
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "rentalType" : {
            "description" : "Type of the node (e.g., 'PROPERTY', 'BUILDING')",
            "type" : "string",
            "examples" : [ "PROPERTY" ],
            "$ref" : "#/components/schemas/UnitType"
          },
          "rentalTitle" : {
            "type" : "string",
            "description" : "Title of the node",
            "examples" : [ "Main Building" ]
          },
          "startOfRental" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "endOfRental" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "billingCycle" : {
            "$ref" : "#/components/schemas/BillingCycle"
          },
          "basicRent" : {
            "type" : "number",
            "format" : "float"
          },
          "operatingCostsPrepayment" : {
            "type" : "number",
            "format" : "float"
          },
          "heatingCostsPrepayment" : {
            "type" : "number",
            "format" : "float"
          }
        },
        "required" : [ "rentalType" ]
      },
      "TenancyListJson" : {
        "description" : "A list of tenancies from a tenant's perspective",
        "type" : "object",
        "properties" : {
          "tenancies" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TenancyItemJson"
            }
          }
        }
      },
      "Type" : {
        "type" : "string",
        "enum" : [ "APPLICATION", "TASK", "DEFECT", "MAINTENANCE" ]
      },
      "UUID" : {
        "type" : "string",
        "format" : "uuid",
        "pattern" : "[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}"
      },
      "UnitType" : {
        "type" : "string",
        "enum" : [ "PROPERTY", "SITE", "BUILDING", "APARTMENT", "STORAGE", "COMMERCIAL" ]
      },
      "UserJson" : {
        "description" : "User information globally",
        "type" : "object",
        "properties" : {
          "active" : {
            "type" : "boolean"
          },
          "id" : {
            "$ref" : "#/components/schemas/UUID"
          },
          "userRoles" : {
            "type" : "array",
            "uniqueItems" : true,
            "items" : {
              "$ref" : "#/components/schemas/UserRole"
            }
          },
          "email" : {
            "type" : "string",
            "maxLength" : 255
          },
          "firstName" : {
            "type" : "string",
            "minLength" : 3,
            "maxLength" : 255
          },
          "lastName" : {
            "type" : "string",
            "minLength" : 3,
            "maxLength" : 255
          },
          "address" : {
            "$ref" : "#/components/schemas/AddressJson"
          },
          "mobilePhoneNumber" : {
            "type" : "string",
            "pattern" : "^\\+[1-9]\\d{4,14}$"
          },
          "businessPhoneNumber" : {
            "type" : "string",
            "pattern" : "^\\+[1-9]\\d{4,14}$"
          },
          "privatePhoneNumber" : {
            "type" : "string",
            "pattern" : "^\\+[1-9]\\d{4,14}$"
          },
          "registeredDate" : {
            "$ref" : "#/components/schemas/LocalDate"
          },
          "lastLoginDate" : {
            "$ref" : "#/components/schemas/LocalDateTime"
          }
        }
      },
      "UserRole" : {
        "type" : "string",
        "enum" : [ "MANAGER", "TENANT", "CONTRACTOR" ]
      }
    },
    "securitySchemes" : {
      "SecurityScheme" : {
        "type" : "http",
        "scheme" : "bearer",
        "bearerFormat" : "JWT",
        "description" : "Authentication"
      }
    }
  },
  "paths" : {
    "/api/v1/address" : {
      "get" : {
        "summary" : "Retrieve supported countries.",
        "parameters" : [ {
          "description" : "A zip code to map the city",
          "name" : "zip",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "pattern" : "^\\d{4,5}$"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of suggested cities",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressJson"
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/v1/address/countries" : {
      "get" : {
        "summary" : "Retrieve supported countries.",
        "responses" : {
          "200" : {
            "description" : "A list of supported countries",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountryListJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/v1/authentication/jwks" : {
      "get" : {
        "summary" : "Expose the JSON Web Key Set used to sign tokens.",
        "responses" : {
          "200" : {
            "description" : "JWKS containing the public keys"
          }
        }
      }
    },
    "/api/v1/authentication/login" : {
      "get" : {
        "summary" : "Login user via oauth flow.",
        "parameters" : [ {
          "name" : "route",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "/"
          }
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect user to the identity provider"
          }
        }
      }
    },
    "/api/v1/authentication/logout" : {
      "get" : {
        "summary" : "Logout user identified by the session cookie.",
        "responses" : {
          "302" : {
            "description" : "Redirect user to the logout page"
          }
        }
      }
    },
    "/api/v1/authentication/session" : {
      "get" : {
        "summary" : "Start user session via oauth flow.",
        "parameters" : [ {
          "name" : "code",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "error",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "state",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : "/"
          }
        } ],
        "responses" : {
          "302" : {
            "description" : "Redirect user to the frontend spa"
          }
        }
      }
    },
    "/api/v1/projects" : {
      "get" : {
        "summary" : "Retrieve information for all projects",
        "parameters" : [ {
          "description" : "Maximum number of projects to return",
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "maximum" : 100,
            "exclusiveMinimum" : 0,
            "default" : "10"
          },
          "required" : true
        }, {
          "description" : "Offset of the first project to return",
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "default" : "0"
          },
          "required" : true
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of projects was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectListJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "post" : {
        "summary" : "Create a new project",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Project created successfully",
            "headers" : {
              "Location" : {
                "description" : "URL of the new project"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectJson"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request message"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/v1/projects/{projectId}" : {
      "patch" : {
        "summary" : "Update information of a project",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "The project was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project does not exist"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "get" : {
        "summary" : "Retrieve information of a project",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The requested project was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project does not exist"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete an existing project",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The project was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    },
    "/api/v1/projects/{projectId}/apartments" : {
      "post" : {
        "summary" : "Create a new apartment",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new apartment was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new apartment"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/apartments/{apartmentId}" : {
      "patch" : {
        "summary" : "Update information on an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The building was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings" : {
      "post" : {
        "summary" : "Create a new building",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildingJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new building was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new building"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}" : {
      "patch" : {
        "summary" : "Update information of a building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildingJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing building was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing building was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The building was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/apartments" : {
      "post" : {
        "summary" : "Create a new apartment",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new apartment was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new apartment"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/apartments/{apartmentId}" : {
      "patch" : {
        "summary" : "Update information on an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The building was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/commercials" : {
      "post" : {
        "summary" : "Create a new commercial",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new commercial was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new commercial"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/commercials/{commercialId}" : {
      "patch" : {
        "summary" : "Update information of a commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information about a commercial",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The commercial was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/storages" : {
      "post" : {
        "summary" : "Create a new storage",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new storage was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new storage"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/buildings/{buildingId}/storages/{storageId}" : {
      "patch" : {
        "summary" : "Update information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The storage was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/commercials" : {
      "post" : {
        "summary" : "Create a new commercial",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new commercial was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new commercial"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/commercials/{commercialId}" : {
      "patch" : {
        "summary" : "Update information of a commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information about a commercial",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The commercial was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/contractors" : {
      "get" : {
        "summary" : "Retrieve information for all contractors of a project.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "Maximum number of contractors to return",
          "name" : "limit",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "maximum" : 100,
            "exclusiveMinimum" : 0,
            "default" : "10"
          },
          "required" : true
        }, {
          "description" : "Offset of the first contractor to return",
          "name" : "offset",
          "in" : "query",
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "minimum" : 0,
            "default" : "0"
          },
          "required" : true
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project does not exist"
          }
        }
      },
      "post" : {
        "summary" : "Create a new contractor for a project.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContractorJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "Contractor created successfully",
            "headers" : {
              "Location" : {
                "description" : "URL of the new contractor"
              }
            }
          },
          "400" : {
            "description" : "Invalid request message"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/contractors/{contractorId}" : {
      "patch" : {
        "summary" : "Update information of a specific contractor.",
        "parameters" : [ {
          "description" : "ID of the contractor",
          "required" : true,
          "name" : "contractorId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ContractorJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project or contractor does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a specific contractor.",
        "parameters" : [ {
          "description" : "ID of the contractor",
          "required" : true,
          "name" : "contractorId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project or contractor does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing contractor.",
        "parameters" : [ {
          "description" : "ID of the contractor",
          "required" : true,
          "name" : "contractorId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The contractor was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project or contractor does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/members" : {
      "get" : {
        "summary" : "Retrieve information of all project members.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all existing members was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectMemberListJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project does not exist"
          }
        }
      },
      "post" : {
        "summary" : "Add a member to project.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectMemberJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "A new member was successfully added",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectMemberJson"
                }
              }
            }
          },
          "400" : {
            "description" : "Invalid request message"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/members/{memberId}" : {
      "patch" : {
        "summary" : "Update role of a project member.",
        "parameters" : [ {
          "description" : "ID of the member",
          "required" : true,
          "name" : "memberId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProjectMemberJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing member was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProjectMemberJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project or the member does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing project member.",
        "parameters" : [ {
          "description" : "ID of the member",
          "required" : true,
          "name" : "memberId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The project member was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The project or the member does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties" : {
      "get" : {
        "summary" : "Retrieve information for all properties",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A list of all existing properties with itsrentable units as tree was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PropertyListJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      },
      "post" : {
        "summary" : "Create a new property",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PropertyJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new property was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new property"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PropertyJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}" : {
      "patch" : {
        "summary" : "Update information of a property",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the property",
          "required" : true,
          "name" : "propertyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/PropertyJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing property was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PropertyJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The property does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a property",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the property",
          "required" : true,
          "name" : "propertyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing property was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PropertyJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The property does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing property",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the property",
          "required" : true,
          "name" : "propertyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "An existing property was successfully deleted"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The property does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings" : {
      "post" : {
        "summary" : "Create a new building",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the property",
          "required" : true,
          "name" : "propertyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildingJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new building was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new building"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}" : {
      "patch" : {
        "summary" : "Update information of a building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/BuildingJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing building was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing building was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/BuildingJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing building.",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The building was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The building does not exist"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/apartments" : {
      "post" : {
        "summary" : "Create a new apartment",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new apartment was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new apartment"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/apartments/{apartmentId}" : {
      "patch" : {
        "summary" : "Update information on an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ApartmentJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of an apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing apartment was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ApartmentJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The apartment does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing apartment",
        "parameters" : [ {
          "description" : "ID of the apartment",
          "required" : true,
          "name" : "apartmentId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The building was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/commercials" : {
      "post" : {
        "summary" : "Create a new commercial",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new commercial was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new commercial"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/commercials/{commercialId}" : {
      "patch" : {
        "summary" : "Update information of a commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CommercialJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information about a commercial",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing commercial was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CommercialJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The commercial does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing commercial unit",
        "parameters" : [ {
          "description" : "ID of the commercial unit",
          "required" : true,
          "name" : "commercialId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The commercial was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/storages" : {
      "post" : {
        "summary" : "Create a new storage",
        "parameters" : [ {
          "description" : "ID of the building",
          "required" : true,
          "name" : "buildingId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new storage was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new storage"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/buildings/{buildingId}/storages/{storageId}" : {
      "patch" : {
        "summary" : "Update information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The storage was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/sites" : {
      "post" : {
        "summary" : "Create a new site",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the property",
          "required" : true,
          "name" : "propertyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new site was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new site"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/properties/{propertyId}/sites/{siteId}" : {
      "patch" : {
        "summary" : "Update information of a site.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing site was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The site does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a site",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing site was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The site does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing site.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The site was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/sites" : {
      "post" : {
        "summary" : "Create a new site",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new site was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new site"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/sites/{siteId}" : {
      "patch" : {
        "summary" : "Update information of a site.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/SiteJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing site was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The site does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a site",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing site was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/SiteJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The site does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing site.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the site",
          "required" : true,
          "name" : "siteId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The site was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/storages" : {
      "post" : {
        "summary" : "Create a new storage",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "201" : {
            "description" : "A new storage was successfully createded",
            "headers" : {
              "Location" : {
                "description" : "URL of the new storage"
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/projects/{projectId}/storages/{storageId}" : {
      "patch" : {
        "summary" : "Update information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/StorageJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "get" : {
        "summary" : "Retrieve information of a storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "An existing storage was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/StorageJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The storage does not exist"
          }
        }
      },
      "delete" : {
        "summary" : "Delete an existing storage.",
        "parameters" : [ {
          "description" : "ID of the project",
          "required" : true,
          "name" : "projectId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the storage",
          "required" : true,
          "name" : "storageId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The storage was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          }
        }
      }
    },
    "/api/v1/tenancies" : {
      "get" : {
        "summary" : "Retrieve information for all tenancies of a lessee.",
        "responses" : {
          "200" : {
            "description" : "OK",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenancyListJson"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/apartments/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The tenancy exists",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/TenancyJson1"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/buildings/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/commercials/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/properties/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/sites/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/tenancies/{tenancyId}/storages/{rentalId}" : {
      "get" : {
        "summary" : "Retrieve information of a tenancy.",
        "parameters" : [ {
          "description" : "ID of the rental",
          "required" : true,
          "name" : "rentalId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        }, {
          "description" : "ID of the tenancy",
          "required" : true,
          "name" : "tenancyId",
          "in" : "path",
          "schema" : {
            "$ref" : "#/components/schemas/UUID"
          }
        } ],
        "responses" : {
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "404" : {
            "description" : "The tenancy does not exist"
          }
        }
      }
    },
    "/api/v1/user" : {
      "patch" : {
        "summary" : "Update information of this user identified by the cookie.",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UserJson"
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Information about the logged in user was successfully updated",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "get" : {
        "summary" : "Retrieve information of this user identified by the cookie.",
        "responses" : {
          "200" : {
            "description" : "Information about the logged in user was successfully returned",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/UserJson"
                }
              }
            }
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      },
      "delete" : {
        "summary" : "Delete this user identified by the cookie.",
        "responses" : {
          "204" : {
            "description" : "The former logged in user was deleted successfully"
          },
          "401" : {
            "description" : "No user authentication provided via session cookie"
          },
          "403" : {
            "description" : "Not Allowed"
          }
        },
        "security" : [ {
          "SecurityScheme" : [ ]
        } ]
      }
    }
  },
  "info" : {
    "title" : "remsfal-platform API",
    "version" : "1.0.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "http://localhost:8080",
    "description" : "Auto generated value"
  }, {
    "url" : "http://0.0.0.0:8080",
    "description" : "Auto generated value"
  } ]
}