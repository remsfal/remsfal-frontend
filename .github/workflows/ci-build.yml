name: "CI Build"

on:
  push:
    branches: ["main"]
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  run-tests:
    name: Node.js ${{ matrix.node-version }} Build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [current, lts/*]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Build REMSFAL
        uses: remsfal/.github/.github/actions/build-frontend@main
        with:
          node-version: ${{ matrix.node-version }}
      - name: Run Unit Test with Vitest (test)
        run: npm run test:unit
      - name: Run E2E Test with Cypress (test)
        uses: cypress-io/github-action@v6
        with:
          # we have already installed all dependencies above
          install: false
          # start the server and wait for it
          start: npm run preview
          wait-on: 'http://localhost:4173/index.html'
          # wait for 3 minutes for the server to respond
          wait-on-timeout: 180
      - name: Check style with ESLint (lint)
        run: npm run lint
      - name: Check css with Stylelint (stylelint)
        run: npm run stylelint

      # Generate reports for Sonar Analysis
      - name: Build Coverage Report (only on LTS version)
        if: ${{ matrix.node-version == 'lts/*' }}
        run: npm run coverage
      - name: Upload Coverage Reports (only on LTS version)
        if: ${{ matrix.node-version == 'lts/*' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ github.run_id }}
          path: coverage/
          retention-days: 1
          if-no-files-found: error
      - name: Build ESLint Report (only on LTS version)
        if: ${{ matrix.node-version == 'lts/*' }}
        run: npm run lint:report
      - name: Upload ESLint Reports (only on LTS version)
        if: ${{ matrix.node-version == 'lts/*' }}
        uses: actions/upload-artifact@v4
        with:
          name: eslint-${{ github.run_id }}
          path: reports/eslint-report.json
          retention-days: 1
          if-no-files-found: error

  check-branches:
    name: "Check Pull Request Conditions"
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Check PR branches
        env:
          HEAD_REF: ${{ github.head_ref }}
          BASE_REF: ${{ github.base_ref }}
        run: |
          if [ "$HEAD_REF" == "main" ] && [ "$BASE_REF" == "main" ]; then
            echo "Pull Requests to main branch are only allowed from developer branches that are not named <main>."
            exit 1
          fi
